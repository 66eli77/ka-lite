machine:
  python:
    version: 2.7.11

dependencies:
  cache_directories:
    - "sc-latest-linux"
    - "node_modules"
  override:
    - pip install -r requirements_sphinx.txt
    - pip install -e .
  post:
    - if [[ ! -e sc-latest-linux/bin/sc ]]; then wget https://saucelabs.com/downloads/sc-latest-linux.tar.gz && tar -xzf sc-latest-linux.tar.gz &&  mv sc-*-linux sc-latest-linux; fi

test:
  pre:
    - wget -O geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v0.10.0/geckodriver-v0.10.0-linux64.tar.gz
    - gunzip -c geckodriver.tar.gz | tar xopf -
    - chmod +x geckodriver
    - sudo mv geckodriver /home/ubuntu/bin
  override:
    - make assets
    - make docs
    - kalite start --traceback -v2
    - kalite status
    - kalite stop --traceback -v2
    - cd sc-*-linux && ./bin/sc -u $SAUCE_USERNAME -k $SAUCE_ACCESS_KEY --tunnel-identifier $CIRCLE_BUILD_NUM-$CIRCLE_NODE_INDEX --readyfile ~/sauce_is_ready > sc_output.txt 2>&1:
        background: true
    - while [ ! -e ~/sauce_is_ready ]; do sleep 1; done
    - case $CIRCLE_NODE_INDEX in 0) coverage run --source=kalite --omit="kalite/testing/*,*/tests/*,*/migrations/*,kalite/packages/*" bin/kalite manage test --bdd-only ;; 1) coverage run --source=kalite --omit="kalite/testing/*,kalite/packages/*,*/tests/*,*/migrations/*" bin/kalite manage test --no-bdd;; esac:
        parallel: true
    # TODO: replace below with "make lint" when we're pep8
    - npm install -g jshint
    - jshint kalite/*/static/js/*/
  post:
    - killall --wait sc  # wait for Sauce Connect to close the tunnel
    - bash <(curl -s https://codecov.io/bash)

notify:
  webhooks:
    - url: https://coveralls.io/webhook?repo_token=YWMKkAVqIigWxX8XerfykVab17vEKmdXO

general:
  artifacts:
    - 'coverage'
